1) Was difficult setting the prompts because for different questions, I needed to engineer the prompts such that there will not be repetitions of questions (I got repetitions - at a point, only addition questions were coming) - had to craft the prompt in such a way that the questions were diversified.

2) Since prompting didn't give me what I needed, I had to actually refer to questions dataset and feed it into the system so that I got more refinded questions.

3) While using AI, prompt engineering is really important. First I had to give the AI agent role as python teacher, then for the answering part, the role had to be given as Python solver.

4) Problem aroused when I had to validate the answers the user was giving, the users may use different variables and stuff which are different from the ones that AI is generating.

5) Further workings are needed on how to improve the feedback, instant feedback is good, maybe some hint giving mechanism is also gonna help and where to implement them on the UI.

6) It was difficult to find the right AI APIs.

7) Gamification in the UI can be done, for example - to reveal the answer, there can be a point system. Users will get points if they get correct answers and they can redeem/use the points to reveal the answers.
Same way can happen with tips - for say, tips can cost around 1 point and to reveal the answers, it is gonna be 3 points.
This will engage the users more and there can be some other way too to accumulate points.